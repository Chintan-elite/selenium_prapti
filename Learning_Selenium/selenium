Automation testing : 
QTP : quick test pro - hp
commercial -- paid software
-windows

Selenium
open source - freeware
-window, macos, linux

-speed
-accurecy
-repeatable
-grop test

********************************
WebElements : 

textbox
buttons
radiobuttons
checkbox
dropdown
link

Locators : 

id -
name -
classname -
xpath
css selector
tagname -
linktext -
partiallinktext - 

*********************************
Selenium is not a single tool. it is suit , goroup of tools

-Selenium IDE
-record and reply tool
-no need to lean programming lang.
-we cant do looping and condtional opration


-Selenium Grid
-used for parallal testing
-it use node and hub concept
-can control testiong on many node system from one hub system.

-Selenium RC - remote control
-long term flagship tool
-we can use many programming lang. 
like..java, php, python, perl, rubby, c#

-script --> middleware --> brwoser
--it uses middleware server to communicate with browser

-Selenium Webdriver
-we can use many programming lang. 
like..java, php, python, perl, rubby, c#

-script --> brwoser
--it will directly communicate with browser

*************************************


1 : we can not use alpha numeric Id
2 : we can not use compund classes
3 : for link text locator verify ancher tag
4 : we can not use "" inside ""
5 : every elment can not have id, name or classname, we have to use xpath or css selector
6 : n number of way to get xpath or css selectors : right click on highlated code and copy xpath or css selectors



12	$("") - for css ,    $x("")   or xpath
13	//tagName[@attribute='value']  - xpath syntax
14	tagName[attribute='value']  -CSS  tagName#id- CSS   tagname.classname- CSS
15	//tagName[contains(@attribute,'value')]  - xpath regular expression
16	tagName[Atrribute*='value'] - Css regular expression


how to createxpath : 
***********************************
1 : //tagName[@attribute='value']

//input[@name='email']

//*[@name='email']

2 : //tagName[contains(@attribute,'value')] 

//input[contains(@id,'u_j_')]
//*[contains(@id,'u_j_')]

3 : parent - child traversing
//table[@id='customers']/tbody/tr[4]/td[3]

4 : child - to parent traversing
//div[@id='userName']/parent::div/parent::div

5 : sibllings traversing
//div[@id='userName']/parent::div/parent::div/preceding-sibling::div[1]

6 : by text
//*[text()='']
































